@page "/"
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.SignalR.Client



@code {
    private bool ifChatting = false;
    private string userName;
    private string theMessage;
    private string newMessage;

    private List<Message> messageList = new List<Message>();
    
    private string hubUrl;
    private HubConnection hubConnection;

    public async Task Chat() 
    {
        if(string.IsNullOrWhiteSpace(userName))
        {
            theMessage = "Ange ditt namn";

            return;
        };

        try 
        {
            ifChatting = true;
            await Task.Delay(1);

            messageList.Clear();

            string baseUrl = navigationManager.BaseUri;
            hubUrl = baseUrl.TrimEnd('/') + ChatHub.HubUrl;

            hubConnection.On<string, string>("Message", sMessage);
                await hubConnection.StartAsync();
                await userNotification($"[Lyssna och Häpna] {userName} har anslutit");
        }
        catch(Exception err)
        {
            theMessage = $"VARNING: Kunde inte ansluta till chatten: {err.Message}";
            ifChatting = false;
        }
    }

    private void sMessage(string name, string message)
    {
        bool isMine = name.Equals(userName, StringComparison.OrdinalIgnoreCase);

        messageList.Add(new Message(name, message, isMine));
        StateHasChanged();
    }

    public async Task DisconnectUser() 
    {
        if(ifChatting)
        {
            await userNotification($"[Lyssna och Häpna] {userName} har kopplats ifrån");

            await hubConnection.StopAsync();
            await hubConnection.DisposeAsync();

            hubConnection = null;
            ifChatting = false;
        }
    }

    public async Task userNotification(string message) 
    {
        if(ifChatting && !string.IsNullOrWhiteSpace(message))
        {
            await hubConnection.SendAsync("sendMessage", userName, message);

            newMessage = string.Empty;
        }
    }

    private class Message 
    {
        public Message(string username, string body, bool mine)
        {
            
        }

        public string Username { get; set; }
        public string Body { get; set;}
        public bool Mine { get; set; }

        public bool IsNotice => Body.StartsWith("[Lyssna och Häpna]");
        public string CSS => Mine ?  "sent" : "received";
    }
 }